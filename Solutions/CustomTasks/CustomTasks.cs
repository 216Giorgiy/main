using System;
using Microsoft.Build.Framework;
using Microsoft.Build.Utilities;

namespace CustomTasks
{
    public class FormatString : Task
    {
        [Required]
        public string Format { get; set; }

        public string[] Args { get; set; }

        [Output]
        public string Result { get; private set; }

        public override bool Execute()
        {
            Result = string.Format(Format, Args);
            return true;
        }
    }

    public class CurrentTime : Task {
        public string Format { get; set; }

        [Output]
        public string Result { get; private set; }

        public override bool Execute() {
            var now = DateTime.Now;
            Result = string.IsNullOrEmpty(Format) ? now.ToString() : now.ToString(Format);

            return true;
        }
    }

    public class FormatTemplate : Task {
        const string Header = @"/*
 * This code was generated by FormatTemplate as part of the build process. Do not edit it.
 *
 * Generated on {0:yyyy-MM-dd hh:mm:ss}.
 *
 */";

        [Required]
        public string Template { get; set; }

        public string[] Parameters { get; set; }

        [Output]
        public string Result { get; private set; }

        public override bool Execute() {
            Result = string.Format(Header, DateTime.Now)
                + Environment.NewLine
                + Environment.NewLine
                + string.Format(Template, Parameters);

            return true;
        }
    }
}



